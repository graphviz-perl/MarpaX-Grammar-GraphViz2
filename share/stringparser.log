Default global: directed => digraph
Default global: driver => /usr/local/bin/dot
Default global: format => svg
Default global: label => ->
Default global: name => Perl
Default global: record_shape => Mrecord
Default global: strict => 0
Default global: subgraph => HASH(0x3b6c878)
Default global: timeout => 10
Default graph: label => stringparser.bnf, rankdir => TB
Default node: shape => rectangle, style => filled
Default edge: color => grey
Added node: "" [ fillcolor="lightgreen" label="{:start|}" shape="Mrecord" ]
Added node: "꞉default" [ fillcolor="lightblue" label="꞉default" ]
Added node: "graph_grammar"
Added edge: "graph_grammar" -> "꞉default"
Added node: "꞉default_1" [ fillcolor="goldenrod" label="{action =\> \[values\]}" shape="Mrecord" ]
Added edge: "꞉default" -> "꞉default_1"
Added node: "꞉discard" [ fillcolor="lightblue" label="꞉discard" ]
Added edge: "graph_grammar" -> "꞉discard"
Added node: "whitespace" [ fillcolor="lightblue" label="whitespace" ]
Added edge: "꞉discard" -> "whitespace"
Added node: "lexeme default" [ fillcolor="lightblue" label="lexeme default" ]
Added edge: "graph_grammar" -> "lexeme default"
Added node: "lexeme default_1" [ fillcolor="lightblue" label="{latm =\> 1}" shape="Mrecord" ]
Added edge: "lexeme default" -> "lexeme default_1"
Added node: "graph_definition" [ fillcolor="white" label="graph_definition" ]
Added edge: "graph_grammar" -> "graph_definition"
Added node: "node_definition" [ fillcolor="white" label="node_definition" ]
Added edge: "graph_definition" -> "node_definition"
Added node: "edge_definition" [ fillcolor="white" label="edge_definition" ]
Added edge: "graph_definition" -> "edge_definition"
Added node: "node_statement" [ fillcolor="white" label="node_statement" ]
Added edge: "node_definition" -> "node_statement"
Added node: "node_statement graph_definition" [ fillcolor="white" label="node_statement graph_definition" ]
Added edge: "node_definition" -> "node_statement graph_definition"
Added edge: "node_statement graph_definition" -> "node_statement"
Added edge: "node_statement graph_definition" -> "graph_definition"
Added node: "node_name_token" [ fillcolor="white" label="node_name_token" ]
Added edge: "node_statement" -> "node_name_token"
Added node: "node_name_token attribute_definition" [ fillcolor="white" label="node_name_token attribute_definition" ]
Added edge: "node_statement" -> "node_name_token attribute_definition"
Added edge: "node_name_token attribute_definition" -> "node_name_token"
Added node: "attribute_definition" [ fillcolor="white" label="attribute_definition" ]
Added edge: "node_name_token attribute_definition" -> "attribute_definition"
Added node: "node_statement (',') node_statement" [ fillcolor="white" label="node_statement (',') node_statement" ]
Added edge: "node_statement" -> "node_statement (',') node_statement"
Added edge: "node_statement (',') node_statement" -> "node_statement"
Added node: "(',')" [ fillcolor="white" label="(',')" ]
Added edge: "node_statement (',') node_statement" -> "(',')"
Added edge: "node_statement (',') node_statement" -> "node_statement"
Added node: "start_node end_node" [ fillcolor="white" label="start_node end_node" ]
Added edge: "node_name_token" -> "start_node end_node"
Added node: "start_node" [ fillcolor="orchid" label="{꞉lexeme|start_node}" shape="Mrecord" ]
Added edge: "start_node end_node" -> "start_node"
Added node: "start_node_0" [ fillcolor="lightblue" label="{event =\> start_node|pause =\> before}" shape="Mrecord" ]
Added edge: "start_node" -> "start_node_0"
Added node: "end_node" [ fillcolor="orchid" label="{꞉lexeme|end_node}" shape="Mrecord" ]
Added edge: "start_node end_node" -> "end_node"
Added node: "end_node_1" [ fillcolor="lightblue" label="{priority =\> 1|event =\> end_node|pause =\> before}" shape="Mrecord" ]
Added edge: "end_node" -> "end_node_1"
Added node: "start_node node_name end_node" [ fillcolor="white" label="start_node node_name end_node" ]
Added edge: "node_name_token" -> "start_node node_name end_node"
Added edge: "start_node node_name end_node" -> "start_node"
Added edge: "start_node" -> "start_node_0"
Added node: "node_name" [ fillcolor="orchid" label="{꞉lexeme|node_name}" shape="Mrecord" ]
Added edge: "start_node node_name end_node" -> "node_name"
Added node: "node_name_1" [ fillcolor="lightblue" label="{event =\> node_name|pause =\> before}" shape="Mrecord" ]
Added edge: "node_name" -> "node_name_1"
Added edge: "start_node node_name end_node" -> "end_node"
Added node: "end_node_2" [ fillcolor="lightblue" label="{priority =\> 1|event =\> end_node|pause =\> before}" shape="Mrecord" ]
Added edge: "end_node" -> "end_node_2"
Added node: "edge_statement" [ fillcolor="white" label="edge_statement" ]
Added edge: "edge_definition" -> "edge_statement"
Added node: "edge_statement graph_definition" [ fillcolor="white" label="edge_statement graph_definition" ]
Added edge: "edge_definition" -> "edge_statement graph_definition"
Added edge: "edge_statement graph_definition" -> "edge_statement"
Added edge: "edge_statement graph_definition" -> "graph_definition"
Added node: "edge_name" [ fillcolor="white" label="edge_name" ]
Added edge: "edge_statement" -> "edge_name"
Added node: "edge_name attribute_definition" [ fillcolor="white" label="edge_name attribute_definition" ]
Added edge: "edge_statement" -> "edge_name attribute_definition"
Added edge: "edge_name attribute_definition" -> "edge_name"
Added edge: "edge_name attribute_definition" -> "attribute_definition"
Added node: "edge_statement (',') edge_statement" [ fillcolor="white" label="edge_statement (',') edge_statement" ]
Added edge: "edge_statement" -> "edge_statement (',') edge_statement"
Added edge: "edge_statement (',') edge_statement" -> "edge_statement"
Added edge: "edge_statement (',') edge_statement" -> "(',')"
Added edge: "edge_statement (',') edge_statement" -> "edge_statement"
Added node: "directed_edge" [ fillcolor="orchid" label="{꞉lexeme|directed_edge}" shape="Mrecord" ]
Added edge: "edge_name" -> "directed_edge"
Added node: "directed_edge_0" [ fillcolor="lightblue" label="{priority =\> 2|event =\> directed_edge|pause =\> before}" shape="Mrecord" ]
Added edge: "directed_edge" -> "directed_edge_0"
Added node: "undirected_edge" [ fillcolor="orchid" label="{꞉lexeme|undirected_edge}" shape="Mrecord" ]
Added edge: "edge_name" -> "undirected_edge"
Added node: "undirected_edge_0" [ fillcolor="lightblue" label="{priority =\> 2|event =\> undirected_edge|pause =\> before}" shape="Mrecord" ]
Added edge: "undirected_edge" -> "undirected_edge_0"
Added node: "attribute_statement" [ fillcolor="white" label="attribute_statement+" ]
Added edge: "attribute_definition" -> "attribute_statement"
Added node: "start_attributes string_token_set end_attributes" [ fillcolor="white" label="start_attributes string_token_set end_attributes" ]
Added edge: "attribute_statement" -> "start_attributes string_token_set end_attributes"
Added node: "start_attributes" [ fillcolor="orchid" label="{꞉lexeme|start_attributes}" shape="Mrecord" ]
Added edge: "start_attributes string_token_set end_attributes" -> "start_attributes"
Added node: "start_attributes_0" [ fillcolor="lightblue" label="{event =\> start_attributes|pause =\> before}" shape="Mrecord" ]
Added edge: "start_attributes" -> "start_attributes_0"
Added node: "string_token_set" [ fillcolor="white" label="string_token_set" ]
Added edge: "start_attributes string_token_set end_attributes" -> "string_token_set"
Added node: "end_attributes" [ fillcolor="orchid" label="{꞉lexeme|end_attributes}" shape="Mrecord" ]
Added edge: "start_attributes string_token_set end_attributes" -> "end_attributes"
Added node: "end_attributes_2" [ fillcolor="lightblue" label="{priority =\> 1|event =\> end_attributes|pause =\> before}" shape="Mrecord" ]
Added edge: "end_attributes" -> "end_attributes_2"
Added node: "string_token_pair" [ fillcolor="white" label="string_token_pair+" ]
Added edge: "string_token_set" -> "string_token_pair"
Added node: "literal_label" [ fillcolor="orchid" label="{꞉lexeme|literal_label}" shape="Mrecord" ]
Added edge: "string_token_pair" -> "literal_label"
Added node: "literal_label_0" [ fillcolor="lightblue" label="{priority =\> 1|event =\> literal_label|pause =\> before}" shape="Mrecord" ]
Added edge: "literal_label" -> "literal_label_0"
Added node: "attribute_name ('꞉') attribute_value" [ fillcolor="white" label="attribute_name ('꞉') attribute_value" ]
Added edge: "string_token_pair" -> "attribute_name ('꞉') attribute_value"
Added node: "attribute_name" [ fillcolor="orchid" label="{꞉lexeme|attribute_name}" shape="Mrecord" ]
Added edge: "attribute_name ('꞉') attribute_value" -> "attribute_name"
Added node: "attribute_name_0" [ fillcolor="lightblue" label="{event =\> attribute_name|pause =\> before}" shape="Mrecord" ]
Added edge: "attribute_name" -> "attribute_name_0"
Added node: "('꞉')" [ fillcolor="white" label="('꞉')" ]
Added edge: "attribute_name ('꞉') attribute_value" -> "('꞉')"
Added node: "attribute_value" [ fillcolor="orchid" label="{꞉lexeme|attribute_value}" shape="Mrecord" ]
Added edge: "attribute_name ('꞉') attribute_value" -> "attribute_value"
Added node: "attribute_value_2" [ fillcolor="lightblue" label="{event =\> attribute_value|pause =\> before}" shape="Mrecord" ]
Added edge: "attribute_value" -> "attribute_value_2"
Added node: "string_char_set" [ fillcolor="white" label="string_char_set+" ]
Added edge: "attribute_name" -> "string_char_set"
Added edge: "attribute_value" -> "string_char_set"
Added node: "'-\>'" [ fillcolor="white" label="'-\>'" ]
Added edge: "directed_edge" -> "'-\>'"
Added node: "'}'" [ fillcolor="white" label="'}'" ]
Added edge: "end_attributes" -> "'}'"
Added node: "']'" [ fillcolor="white" label="'\]'" ]
Added edge: "end_node" -> "']'"
Added node: "'\\' [[꞉print꞉]]" [ fillcolor="white" label="'\\' \[\[꞉print꞉\]\]" ]
Added node: "escaped_char"
Added edge: "escaped_char" -> "'\\' [[꞉print꞉]]"
Added node: "'\\'" [ fillcolor="white" label="'\\'" ]
Added edge: "'\\' [[꞉print꞉]]" -> "'\\'"
Added node: "[[꞉print꞉]]" [ fillcolor="white" label="\[\[꞉print꞉\]\]" ]
Added edge: "'\\' [[꞉print꞉]]" -> "[[꞉print꞉]]"
Added node: "'label'" [ fillcolor="white" label="'label'" ]
Added edge: "literal_label" -> "'label'"
Added edge: "node_name" -> "string_char_set"
Added node: "'{'" [ fillcolor="white" label="'{'" ]
Added edge: "start_attributes" -> "'{'"
Added node: "'['" [ fillcolor="white" label="'\['" ]
Added edge: "start_node" -> "'['"
Added node: "escaped_char" [ fillcolor="white" label="escaped_char" ]
Added edge: "string_char_set" -> "escaped_char"
Added node: "[^;꞉}\\]]" [ fillcolor="white" label="\[^;꞉}\\]\]" ]
Added edge: "string_char_set" -> "[^;꞉}\\]]"
Added node: "'--'" [ fillcolor="white" label="'--'" ]
Added edge: "undirected_edge" -> "'--'"
Added node: "[\\s]" [ fillcolor="white" label="\[\\s\]+" ]
Added edge: "whitespace" -> "[\\s]"
Default graph: label => stringparser.bnf, rankdir => TB
Default node: shape => rectangle, style => filled
Default edge: color => grey
Default subgraph: rank => max
Added node: "Legend" [ label=<<table bgcolor = 'white'>
<tr>
	<td bgcolor = 'lightgreen'>The green node is the start node</td>
</tr>
<tr>
	<td bgcolor = 'lightblue'>Lightblue nodes are for lexeme attributes</td>
</tr>
<tr>
	<td bgcolor = 'orchid'>Orchid nodes are for lexemes</td>
</tr>
<tr>
	<td bgcolor = 'goldenrod'>Golden nodes are for actions</td>
</tr>
<tr>
	<td bgcolor = 'firebrick1'>Red nodes are for events</td>
</tr>
</table>> shape="plaintext" ]
Driver: /usr/local/bin/dot. Output file: html/stringparser.svg. Format: svg. Timeout: 10 second(s)

digraph Perl
{
graph [ label="stringparser.bnf" rankdir="TB" ]
node [ shape="rectangle" style="filled" ]
edge [ color="grey" ]
"" [ fillcolor="lightgreen" label="{:start|}" shape="Mrecord" ]
"꞉default" [ fillcolor="lightblue" label="꞉default" ]
"graph_grammar"
"graph_grammar" -> "꞉default"
"꞉default_1" [ fillcolor="goldenrod" label="{action =\> \[values\]}" shape="Mrecord" ]
"꞉default" -> "꞉default_1"
"꞉discard" [ fillcolor="lightblue" label="꞉discard" ]
"graph_grammar" -> "꞉discard"
"whitespace" [ fillcolor="lightblue" label="whitespace" ]
"꞉discard" -> "whitespace"
"lexeme default" [ fillcolor="lightblue" label="lexeme default" ]
"graph_grammar" -> "lexeme default"
"lexeme default_1" [ fillcolor="lightblue" label="{latm =\> 1}" shape="Mrecord" ]
"lexeme default" -> "lexeme default_1"
"graph_definition" [ fillcolor="white" label="graph_definition" ]
"graph_grammar" -> "graph_definition"
"node_definition" [ fillcolor="white" label="node_definition" ]
"graph_definition" -> "node_definition"
"edge_definition" [ fillcolor="white" label="edge_definition" ]
"graph_definition" -> "edge_definition"
"node_statement" [ fillcolor="white" label="node_statement" ]
"node_definition" -> "node_statement"
"node_statement graph_definition" [ fillcolor="white" label="node_statement graph_definition" ]
"node_definition" -> "node_statement graph_definition"
"node_statement graph_definition" -> "node_statement"
"node_statement graph_definition" -> "graph_definition"
"node_name_token" [ fillcolor="white" label="node_name_token" ]
"node_statement" -> "node_name_token"
"node_name_token attribute_definition" [ fillcolor="white" label="node_name_token attribute_definition" ]
"node_statement" -> "node_name_token attribute_definition"
"node_name_token attribute_definition" -> "node_name_token"
"attribute_definition" [ fillcolor="white" label="attribute_definition" ]
"node_name_token attribute_definition" -> "attribute_definition"
"node_statement (',') node_statement" [ fillcolor="white" label="node_statement (',') node_statement" ]
"node_statement" -> "node_statement (',') node_statement"
"node_statement (',') node_statement" -> "node_statement"
"(',')" [ fillcolor="white" label="(',')" ]
"node_statement (',') node_statement" -> "(',')"
"node_statement (',') node_statement" -> "node_statement"
"start_node end_node" [ fillcolor="white" label="start_node end_node" ]
"node_name_token" -> "start_node end_node"
"start_node" [ fillcolor="orchid" label="{꞉lexeme|start_node}" shape="Mrecord" ]
"start_node end_node" -> "start_node"
"start_node_0" [ fillcolor="lightblue" label="{event =\> start_node|pause =\> before}" shape="Mrecord" ]
"start_node" -> "start_node_0"
"end_node" [ fillcolor="orchid" label="{꞉lexeme|end_node}" shape="Mrecord" ]
"start_node end_node" -> "end_node"
"end_node_1" [ fillcolor="lightblue" label="{priority =\> 1|event =\> end_node|pause =\> before}" shape="Mrecord" ]
"end_node" -> "end_node_1"
"start_node node_name end_node" [ fillcolor="white" label="start_node node_name end_node" ]
"node_name_token" -> "start_node node_name end_node"
"start_node node_name end_node" -> "start_node"
"start_node" -> "start_node_0"
"node_name" [ fillcolor="orchid" label="{꞉lexeme|node_name}" shape="Mrecord" ]
"start_node node_name end_node" -> "node_name"
"node_name_1" [ fillcolor="lightblue" label="{event =\> node_name|pause =\> before}" shape="Mrecord" ]
"node_name" -> "node_name_1"
"start_node node_name end_node" -> "end_node"
"end_node_2" [ fillcolor="lightblue" label="{priority =\> 1|event =\> end_node|pause =\> before}" shape="Mrecord" ]
"end_node" -> "end_node_2"
"edge_statement" [ fillcolor="white" label="edge_statement" ]
"edge_definition" -> "edge_statement"
"edge_statement graph_definition" [ fillcolor="white" label="edge_statement graph_definition" ]
"edge_definition" -> "edge_statement graph_definition"
"edge_statement graph_definition" -> "edge_statement"
"edge_statement graph_definition" -> "graph_definition"
"edge_name" [ fillcolor="white" label="edge_name" ]
"edge_statement" -> "edge_name"
"edge_name attribute_definition" [ fillcolor="white" label="edge_name attribute_definition" ]
"edge_statement" -> "edge_name attribute_definition"
"edge_name attribute_definition" -> "edge_name"
"edge_name attribute_definition" -> "attribute_definition"
"edge_statement (',') edge_statement" [ fillcolor="white" label="edge_statement (',') edge_statement" ]
"edge_statement" -> "edge_statement (',') edge_statement"
"edge_statement (',') edge_statement" -> "edge_statement"
"edge_statement (',') edge_statement" -> "(',')"
"edge_statement (',') edge_statement" -> "edge_statement"
"directed_edge" [ fillcolor="orchid" label="{꞉lexeme|directed_edge}" shape="Mrecord" ]
"edge_name" -> "directed_edge"
"directed_edge_0" [ fillcolor="lightblue" label="{priority =\> 2|event =\> directed_edge|pause =\> before}" shape="Mrecord" ]
"directed_edge" -> "directed_edge_0"
"undirected_edge" [ fillcolor="orchid" label="{꞉lexeme|undirected_edge}" shape="Mrecord" ]
"edge_name" -> "undirected_edge"
"undirected_edge_0" [ fillcolor="lightblue" label="{priority =\> 2|event =\> undirected_edge|pause =\> before}" shape="Mrecord" ]
"undirected_edge" -> "undirected_edge_0"
"attribute_statement" [ fillcolor="white" label="attribute_statement+" ]
"attribute_definition" -> "attribute_statement"
"start_attributes string_token_set end_attributes" [ fillcolor="white" label="start_attributes string_token_set end_attributes" ]
"attribute_statement" -> "start_attributes string_token_set end_attributes"
"start_attributes" [ fillcolor="orchid" label="{꞉lexeme|start_attributes}" shape="Mrecord" ]
"start_attributes string_token_set end_attributes" -> "start_attributes"
"start_attributes_0" [ fillcolor="lightblue" label="{event =\> start_attributes|pause =\> before}" shape="Mrecord" ]
"start_attributes" -> "start_attributes_0"
"string_token_set" [ fillcolor="white" label="string_token_set" ]
"start_attributes string_token_set end_attributes" -> "string_token_set"
"end_attributes" [ fillcolor="orchid" label="{꞉lexeme|end_attributes}" shape="Mrecord" ]
"start_attributes string_token_set end_attributes" -> "end_attributes"
"end_attributes_2" [ fillcolor="lightblue" label="{priority =\> 1|event =\> end_attributes|pause =\> before}" shape="Mrecord" ]
"end_attributes" -> "end_attributes_2"
"string_token_pair" [ fillcolor="white" label="string_token_pair+" ]
"string_token_set" -> "string_token_pair"
"literal_label" [ fillcolor="orchid" label="{꞉lexeme|literal_label}" shape="Mrecord" ]
"string_token_pair" -> "literal_label"
"literal_label_0" [ fillcolor="lightblue" label="{priority =\> 1|event =\> literal_label|pause =\> before}" shape="Mrecord" ]
"literal_label" -> "literal_label_0"
"attribute_name ('꞉') attribute_value" [ fillcolor="white" label="attribute_name ('꞉') attribute_value" ]
"string_token_pair" -> "attribute_name ('꞉') attribute_value"
"attribute_name" [ fillcolor="orchid" label="{꞉lexeme|attribute_name}" shape="Mrecord" ]
"attribute_name ('꞉') attribute_value" -> "attribute_name"
"attribute_name_0" [ fillcolor="lightblue" label="{event =\> attribute_name|pause =\> before}" shape="Mrecord" ]
"attribute_name" -> "attribute_name_0"
"('꞉')" [ fillcolor="white" label="('꞉')" ]
"attribute_name ('꞉') attribute_value" -> "('꞉')"
"attribute_value" [ fillcolor="orchid" label="{꞉lexeme|attribute_value}" shape="Mrecord" ]
"attribute_name ('꞉') attribute_value" -> "attribute_value"
"attribute_value_2" [ fillcolor="lightblue" label="{event =\> attribute_value|pause =\> before}" shape="Mrecord" ]
"attribute_value" -> "attribute_value_2"
"string_char_set" [ fillcolor="white" label="string_char_set+" ]
"attribute_name" -> "string_char_set"
"attribute_value" -> "string_char_set"
"'-\>'" [ fillcolor="white" label="'-\>'" ]
"directed_edge" -> "'-\>'"
"'}'" [ fillcolor="white" label="'}'" ]
"end_attributes" -> "'}'"
"']'" [ fillcolor="white" label="'\]'" ]
"end_node" -> "']'"
"'\\' [[꞉print꞉]]" [ fillcolor="white" label="'\\' \[\[꞉print꞉\]\]" ]
"escaped_char"
"escaped_char" -> "'\\' [[꞉print꞉]]"
"'\\'" [ fillcolor="white" label="'\\'" ]
"'\\' [[꞉print꞉]]" -> "'\\'"
"[[꞉print꞉]]" [ fillcolor="white" label="\[\[꞉print꞉\]\]" ]
"'\\' [[꞉print꞉]]" -> "[[꞉print꞉]]"
"'label'" [ fillcolor="white" label="'label'" ]
"literal_label" -> "'label'"
"node_name" -> "string_char_set"
"'{'" [ fillcolor="white" label="'{'" ]
"start_attributes" -> "'{'"
"'['" [ fillcolor="white" label="'\['" ]
"start_node" -> "'['"
"escaped_char" [ fillcolor="white" label="escaped_char" ]
"string_char_set" -> "escaped_char"
"[^;꞉}\\]]" [ fillcolor="white" label="\[^;꞉}\\]\]" ]
"string_char_set" -> "[^;꞉}\\]]"
"'--'" [ fillcolor="white" label="'--'" ]
"undirected_edge" -> "'--'"
"[\\s]" [ fillcolor="white" label="\[\\s\]+" ]
"whitespace" -> "[\\s]"

subgraph 
{
graph [ label="stringparser.bnf" rankdir="TB" ]
node [ shape="rectangle" style="filled" ]
edge [ color="grey" ]
rank="max" 
"Legend" [ label=<<table bgcolor = 'white'>
<tr>
	<td bgcolor = 'lightgreen'>The green node is the start node</td>
</tr>
<tr>
	<td bgcolor = 'lightblue'>Lightblue nodes are for lexeme attributes</td>
</tr>
<tr>
	<td bgcolor = 'orchid'>Orchid nodes are for lexemes</td>
</tr>
<tr>
	<td bgcolor = 'goldenrod'>Golden nodes are for actions</td>
</tr>
<tr>
	<td bgcolor = 'firebrick1'>Red nodes are for events</td>
</tr>
</table>> shape="plaintext" ]
}
}
Wrote html/stringparser.svg. Size: 64990 bytes
