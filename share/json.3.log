Default global: directed => digraph
Default global: driver => /usr/local/bin/dot
Default global: format => svg
Default global: label => ->
Default global: name => Perl
Default global: record_shape => Mrecord
Default global: strict => 0
Default global: subgraph => HASH(0x3396530)
Default global: timeout => 10
Default graph: label => json.3.bnf, rankdir => TB
Default node: shape => rectangle, style => filled
Default edge: color => grey
Added node: "" [ fillcolor="lightgreen" label="{:start|}" shape="Mrecord" ]
Added node: "꞉default" [ fillcolor="lightblue" label="꞉default" ]
Added node: "json"
Added edge: "json" -> "꞉default"
Added node: "꞉default_1" [ fillcolor="goldenrod" label="{action =\> ꞉꞉first}" shape="Mrecord" ]
Added edge: "꞉default" -> "꞉default_1"
Added node: "꞉discard" [ fillcolor="lightblue" label="꞉discard" ]
Added edge: "json" -> "꞉discard"
Added node: "whitespace" [ fillcolor="lightblue" label="whitespace" ]
Added edge: "꞉discard" -> "whitespace"
Added node: "lexeme default" [ fillcolor="lightblue" label="lexeme default" ]
Added edge: "json" -> "lexeme default"
Added node: "lexeme default_1" [ fillcolor="lightblue" label="{action =\> \[name,value\]|latm =\> 1}" shape="Mrecord" ]
Added edge: "lexeme default" -> "lexeme default_1"
Added node: "hash" [ fillcolor="white" label="hash" ]
Added edge: "json" -> "hash"
Added node: "array" [ fillcolor="white" label="array" ]
Added edge: "json" -> "array"
Added node: "('{') \<hash pairs\> ('}')" [ fillcolor="white" label="('{') \<hash pairs\> ('}')" ]
Added edge: "hash" -> "('{') \<hash pairs\> ('}')"
Added node: "('{')" [ fillcolor="white" label="('{')" ]
Added edge: "('{') \<hash pairs\> ('}')" -> "('{')"
Added node: "\<hash pairs\>" [ fillcolor="white" label="\<hash pairs\>" ]
Added edge: "('{') \<hash pairs\> ('}')" -> "\<hash pairs\>"
Added node: "('}')" [ fillcolor="white" label="('}')" ]
Added edge: "('{') \<hash pairs\> ('}')" -> "('}')"
Added node: "('{') \<hash pairs\> ('}')_attributes" [ fillcolor="goldenrod" label="{action =\> \[name,value\]}" shape="Mrecord" ]
Added edge: "('{') \<hash pairs\> ('}')" -> "('{') \<hash pairs\> ('}')_attributes"
Added node: "pair" [ fillcolor="white" label="pair*" ]
Added edge: "\<hash pairs\>" -> "pair"
Added node: "pair_attributes" [ fillcolor="goldenrod" label="{action =\> \[values\]|separator =\> \<comma\>}" shape="Mrecord" ]
Added edge: "pair" -> "pair_attributes"
Added node: "string ('꞉') value" [ fillcolor="white" label="string ('꞉') value" ]
Added edge: "pair" -> "string ('꞉') value"
Added node: "string" [ fillcolor="white" label="string" ]
Added edge: "string ('꞉') value" -> "string"
Added node: "('꞉')" [ fillcolor="white" label="('꞉')" ]
Added edge: "string ('꞉') value" -> "('꞉')"
Added node: "value" [ fillcolor="white" label="value" ]
Added edge: "string ('꞉') value" -> "value"
Added node: "string ('꞉') value_attributes" [ fillcolor="goldenrod" label="{action =\> \[values\]}" shape="Mrecord" ]
Added edge: "string ('꞉') value" -> "string ('꞉') value_attributes"
Added edge: "value" -> "string"
Added edge: "value" -> "hash"
Added node: "number" [ fillcolor="white" label="number" ]
Added edge: "value" -> "number"
Added edge: "value" -> "array"
Added node: "true" [ fillcolor="white" label="true" ]
Added edge: "value" -> "true"
Added node: "false" [ fillcolor="white" label="false" ]
Added edge: "value" -> "false"
Added node: "null" [ fillcolor="white" label="null" ]
Added edge: "value" -> "null"
Added node: "'true'" [ fillcolor="white" label="'true'" ]
Added edge: "true" -> "'true'"
Added node: "'true'_attributes" [ fillcolor="goldenrod" label="{action =\> \[name\]}" shape="Mrecord" ]
Added edge: "'true'" -> "'true'_attributes"
Added node: "'false'" [ fillcolor="white" label="'false'" ]
Added edge: "false" -> "'false'"
Added node: "'false'_attributes" [ fillcolor="goldenrod" label="{action =\> \[name\]}" shape="Mrecord" ]
Added edge: "'false'" -> "'false'_attributes"
Added node: "'null'" [ fillcolor="white" label="'null'" ]
Added edge: "null" -> "'null'"
Added node: "'null'_attributes" [ fillcolor="goldenrod" label="{action =\> \[name\]}" shape="Mrecord" ]
Added edge: "'null'" -> "'null'_attributes"
Added node: "('[') elements (']')" [ fillcolor="white" label="('\[') elements ('\]')" ]
Added edge: "array" -> "('[') elements (']')"
Added node: "('[')" [ fillcolor="white" label="('\[')" ]
Added edge: "('[') elements (']')" -> "('[')"
Added node: "elements" [ fillcolor="white" label="elements" ]
Added edge: "('[') elements (']')" -> "elements"
Added node: "(']')" [ fillcolor="white" label="('\]')" ]
Added edge: "('[') elements (']')" -> "(']')"
Added node: "('[') elements (']')_attributes" [ fillcolor="goldenrod" label="{action =\> \[name,values\]}" shape="Mrecord" ]
Added edge: "('[') elements (']')" -> "('[') elements (']')_attributes"
Added edge: "elements" -> "value"
Added node: "value_attributes" [ fillcolor="goldenrod" label="{separator =\> \<comma\>|action =\> \[values\]}" shape="Mrecord" ]
Added edge: "value" -> "value_attributes"
Added node: "int" [ fillcolor="white" label="int" ]
Added edge: "number" -> "int"
Added node: "int frac" [ fillcolor="white" label="int frac" ]
Added edge: "number" -> "int frac"
Added edge: "int frac" -> "int"
Added node: "frac" [ fillcolor="white" label="frac" ]
Added edge: "int frac" -> "frac"
Added node: "int exp" [ fillcolor="white" label="int exp" ]
Added edge: "number" -> "int exp"
Added edge: "int exp" -> "int"
Added node: "exp" [ fillcolor="white" label="exp" ]
Added edge: "int exp" -> "exp"
Added node: "int frac exp" [ fillcolor="white" label="int frac exp" ]
Added edge: "number" -> "int frac exp"
Added edge: "int frac exp" -> "int"
Added edge: "int frac exp" -> "frac"
Added edge: "int frac exp" -> "exp"
Added node: "digits" [ fillcolor="white" label="digits" ]
Added edge: "int" -> "digits"
Added node: "'-' digits" [ fillcolor="white" label="'-' digits" ]
Added edge: "int" -> "'-' digits"
Added node: "'-'" [ fillcolor="white" label="'-'" ]
Added edge: "'-' digits" -> "'-'"
Added edge: "'-' digits" -> "digits"
Added node: "[\\d]" [ fillcolor="white" label="\[\\d\]+" ]
Added edge: "digits" -> "[\\d]"
Added node: "'.' digits" [ fillcolor="white" label="'.' digits" ]
Added edge: "frac" -> "'.' digits"
Added node: "'.'" [ fillcolor="white" label="'.'" ]
Added edge: "'.' digits" -> "'.'"
Added edge: "'.' digits" -> "digits"
Added node: "e digits" [ fillcolor="white" label="e digits" ]
Added edge: "exp" -> "e digits"
Added node: "e" [ fillcolor="white" label="e" ]
Added edge: "e digits" -> "e"
Added edge: "e digits" -> "digits"
Added node: "'e'" [ fillcolor="white" label="'e'" ]
Added edge: "e" -> "'e'"
Added node: "'e+'" [ fillcolor="white" label="'e+'" ]
Added edge: "e" -> "'e+'"
Added node: "'e-'" [ fillcolor="white" label="'e-'" ]
Added edge: "e" -> "'e-'"
Added node: "'E'" [ fillcolor="white" label="'E'" ]
Added edge: "e" -> "'E'"
Added node: "'E+'" [ fillcolor="white" label="'E+'" ]
Added edge: "e" -> "'E+'"
Added node: "'E-'" [ fillcolor="white" label="'E-'" ]
Added edge: "e" -> "'E-'"
Added node: "(quote) \<string contents\> (quote)" [ fillcolor="white" label="(quote) \<string contents\> (quote)" ]
Added edge: "string" -> "(quote) \<string contents\> (quote)"
Added node: "(quote)" [ fillcolor="white" label="(quote)" ]
Added edge: "(quote) \<string contents\> (quote)" -> "(quote)"
Added node: "\<string contents\>" [ fillcolor="white" label="\<string contents\>" ]
Added edge: "(quote) \<string contents\> (quote)" -> "\<string contents\>"
Added edge: "(quote) \<string contents\> (quote)" -> "(quote)"
Added node: "(quote) \<string contents\> (quote)_attributes" [ fillcolor="goldenrod" label="{action =\> \[name,values\]}" shape="Mrecord" ]
Added edge: "(quote) \<string contents\> (quote)" -> "(quote) \<string contents\> (quote)_attributes"
Added node: "\<string piece\>" [ fillcolor="white" label="\<string piece\>*" ]
Added edge: "\<string contents\>" -> "\<string piece\>"
Added node: "\<string piece\>_attributes" [ fillcolor="goldenrod" label="{action =\> \[values\]}" shape="Mrecord" ]
Added edge: "\<string piece\>" -> "\<string piece\>_attributes"
Added node: "\<easy string\>" [ fillcolor="white" label="\<easy string\>" ]
Added edge: "\<string piece\>" -> "\<easy string\>"
Added node: "\<escaped char\>" [ fillcolor="white" label="\<escaped char\>" ]
Added edge: "\<string piece\>" -> "\<escaped char\>"
Added node: "\<hex char\>" [ fillcolor="white" label="\<hex char\>" ]
Added edge: "\<string piece\>" -> "\<hex char\>"
Added node: "('\\') \<any char\>" [ fillcolor="white" label="('\\') \<any char\>" ]
Added edge: "\<escaped char\>" -> "('\\') \<any char\>"
Added node: "('\\')" [ fillcolor="white" label="('\\')" ]
Added edge: "('\\') \<any char\>" -> "('\\')"
Added node: "\<any char\>" [ fillcolor="white" label="\<any char\>" ]
Added edge: "('\\') \<any char\>" -> "\<any char\>"
Added node: "[ꞌꞌ]" [ fillcolor="white" label="\[ꞌꞌ\]" ]
Added node: "quote"
Added edge: "quote" -> "[ꞌꞌ]"
Added node: "[^ꞌꞌ\\\\]" [ fillcolor="white" label="\[^ꞌꞌ\\\\]*" ]
Added edge: "\<easy string\>" -> "[^ꞌꞌ\\\\]"
Added node: "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" [ fillcolor="white" label="'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" ]
Added edge: "\<hex char\>" -> "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>"
Added node: "'\\'" [ fillcolor="white" label="'\\'" ]
Added edge: "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "'\\'"
Added node: "'u'" [ fillcolor="white" label="'u'" ]
Added edge: "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "'u'"
Added node: "\<hex digit\>" [ fillcolor="white" label="\<hex digit\>" ]
Added edge: "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
Added edge: "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
Added edge: "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
Added edge: "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
Added node: "[0-9A-Fa-f]" [ fillcolor="white" label="\[0-9A-Fa-f\]" ]
Added edge: "\<hex digit\>" -> "[0-9A-Fa-f]"
Added node: "[\\d\\D]" [ fillcolor="white" label="\[\\d\\D\]" ]
Added edge: "\<any char\>" -> "[\\d\\D]"
Added node: "','" [ fillcolor="white" label="','" ]
Added node: "comma"
Added edge: "comma" -> "','"
Added node: "[\\s]" [ fillcolor="white" label="\[\\s\]+" ]
Added edge: "whitespace" -> "[\\s]"
Default graph: label => json.3.bnf, rankdir => TB
Default node: shape => rectangle, style => filled
Default edge: color => grey
Default subgraph: rank => max
Added node: "Legend" [ label=<<table bgcolor = 'white'>
<tr>
	<td bgcolor = 'lightgreen'>The green node is the start node</td>
</tr>
<tr>
	<td bgcolor = 'lightblue'>Lightblue nodes are for lexeme attributes</td>
</tr>
<tr>
	<td bgcolor = 'orchid'>Orchid nodes are for lexemes</td>
</tr>
<tr>
	<td bgcolor = 'goldenrod'>Golden nodes are for actions</td>
</tr>
<tr>
	<td bgcolor = 'firebrick1'>Red nodes are for events</td>
</tr>
</table>> shape="plaintext" ]
Driver: /usr/local/bin/dot. Output file: html/json.3.svg. Format: svg. Timeout: 10 second(s)

digraph Perl
{
graph [ label="json.3.bnf" rankdir="TB" ]
node [ shape="rectangle" style="filled" ]
edge [ color="grey" ]
"" [ fillcolor="lightgreen" label="{:start|}" shape="Mrecord" ]
"꞉default" [ fillcolor="lightblue" label="꞉default" ]
"json"
"json" -> "꞉default"
"꞉default_1" [ fillcolor="goldenrod" label="{action =\> ꞉꞉first}" shape="Mrecord" ]
"꞉default" -> "꞉default_1"
"꞉discard" [ fillcolor="lightblue" label="꞉discard" ]
"json" -> "꞉discard"
"whitespace" [ fillcolor="lightblue" label="whitespace" ]
"꞉discard" -> "whitespace"
"lexeme default" [ fillcolor="lightblue" label="lexeme default" ]
"json" -> "lexeme default"
"lexeme default_1" [ fillcolor="lightblue" label="{action =\> \[name,value\]|latm =\> 1}" shape="Mrecord" ]
"lexeme default" -> "lexeme default_1"
"hash" [ fillcolor="white" label="hash" ]
"json" -> "hash"
"array" [ fillcolor="white" label="array" ]
"json" -> "array"
"('{') \<hash pairs\> ('}')" [ fillcolor="white" label="('{') \<hash pairs\> ('}')" ]
"hash" -> "('{') \<hash pairs\> ('}')"
"('{')" [ fillcolor="white" label="('{')" ]
"('{') \<hash pairs\> ('}')" -> "('{')"
"\<hash pairs\>" [ fillcolor="white" label="\<hash pairs\>" ]
"('{') \<hash pairs\> ('}')" -> "\<hash pairs\>"
"('}')" [ fillcolor="white" label="('}')" ]
"('{') \<hash pairs\> ('}')" -> "('}')"
"('{') \<hash pairs\> ('}')_attributes" [ fillcolor="goldenrod" label="{action =\> \[name,value\]}" shape="Mrecord" ]
"('{') \<hash pairs\> ('}')" -> "('{') \<hash pairs\> ('}')_attributes"
"pair" [ fillcolor="white" label="pair*" ]
"\<hash pairs\>" -> "pair"
"pair_attributes" [ fillcolor="goldenrod" label="{action =\> \[values\]|separator =\> \<comma\>}" shape="Mrecord" ]
"pair" -> "pair_attributes"
"string ('꞉') value" [ fillcolor="white" label="string ('꞉') value" ]
"pair" -> "string ('꞉') value"
"string" [ fillcolor="white" label="string" ]
"string ('꞉') value" -> "string"
"('꞉')" [ fillcolor="white" label="('꞉')" ]
"string ('꞉') value" -> "('꞉')"
"value" [ fillcolor="white" label="value" ]
"string ('꞉') value" -> "value"
"string ('꞉') value_attributes" [ fillcolor="goldenrod" label="{action =\> \[values\]}" shape="Mrecord" ]
"string ('꞉') value" -> "string ('꞉') value_attributes"
"value" -> "string"
"value" -> "hash"
"number" [ fillcolor="white" label="number" ]
"value" -> "number"
"value" -> "array"
"true" [ fillcolor="white" label="true" ]
"value" -> "true"
"false" [ fillcolor="white" label="false" ]
"value" -> "false"
"null" [ fillcolor="white" label="null" ]
"value" -> "null"
"'true'" [ fillcolor="white" label="'true'" ]
"true" -> "'true'"
"'true'_attributes" [ fillcolor="goldenrod" label="{action =\> \[name\]}" shape="Mrecord" ]
"'true'" -> "'true'_attributes"
"'false'" [ fillcolor="white" label="'false'" ]
"false" -> "'false'"
"'false'_attributes" [ fillcolor="goldenrod" label="{action =\> \[name\]}" shape="Mrecord" ]
"'false'" -> "'false'_attributes"
"'null'" [ fillcolor="white" label="'null'" ]
"null" -> "'null'"
"'null'_attributes" [ fillcolor="goldenrod" label="{action =\> \[name\]}" shape="Mrecord" ]
"'null'" -> "'null'_attributes"
"('[') elements (']')" [ fillcolor="white" label="('\[') elements ('\]')" ]
"array" -> "('[') elements (']')"
"('[')" [ fillcolor="white" label="('\[')" ]
"('[') elements (']')" -> "('[')"
"elements" [ fillcolor="white" label="elements" ]
"('[') elements (']')" -> "elements"
"(']')" [ fillcolor="white" label="('\]')" ]
"('[') elements (']')" -> "(']')"
"('[') elements (']')_attributes" [ fillcolor="goldenrod" label="{action =\> \[name,values\]}" shape="Mrecord" ]
"('[') elements (']')" -> "('[') elements (']')_attributes"
"elements" -> "value"
"value_attributes" [ fillcolor="goldenrod" label="{separator =\> \<comma\>|action =\> \[values\]}" shape="Mrecord" ]
"value" -> "value_attributes"
"int" [ fillcolor="white" label="int" ]
"number" -> "int"
"int frac" [ fillcolor="white" label="int frac" ]
"number" -> "int frac"
"int frac" -> "int"
"frac" [ fillcolor="white" label="frac" ]
"int frac" -> "frac"
"int exp" [ fillcolor="white" label="int exp" ]
"number" -> "int exp"
"int exp" -> "int"
"exp" [ fillcolor="white" label="exp" ]
"int exp" -> "exp"
"int frac exp" [ fillcolor="white" label="int frac exp" ]
"number" -> "int frac exp"
"int frac exp" -> "int"
"int frac exp" -> "frac"
"int frac exp" -> "exp"
"digits" [ fillcolor="white" label="digits" ]
"int" -> "digits"
"'-' digits" [ fillcolor="white" label="'-' digits" ]
"int" -> "'-' digits"
"'-'" [ fillcolor="white" label="'-'" ]
"'-' digits" -> "'-'"
"'-' digits" -> "digits"
"[\\d]" [ fillcolor="white" label="\[\\d\]+" ]
"digits" -> "[\\d]"
"'.' digits" [ fillcolor="white" label="'.' digits" ]
"frac" -> "'.' digits"
"'.'" [ fillcolor="white" label="'.'" ]
"'.' digits" -> "'.'"
"'.' digits" -> "digits"
"e digits" [ fillcolor="white" label="e digits" ]
"exp" -> "e digits"
"e" [ fillcolor="white" label="e" ]
"e digits" -> "e"
"e digits" -> "digits"
"'e'" [ fillcolor="white" label="'e'" ]
"e" -> "'e'"
"'e+'" [ fillcolor="white" label="'e+'" ]
"e" -> "'e+'"
"'e-'" [ fillcolor="white" label="'e-'" ]
"e" -> "'e-'"
"'E'" [ fillcolor="white" label="'E'" ]
"e" -> "'E'"
"'E+'" [ fillcolor="white" label="'E+'" ]
"e" -> "'E+'"
"'E-'" [ fillcolor="white" label="'E-'" ]
"e" -> "'E-'"
"(quote) \<string contents\> (quote)" [ fillcolor="white" label="(quote) \<string contents\> (quote)" ]
"string" -> "(quote) \<string contents\> (quote)"
"(quote)" [ fillcolor="white" label="(quote)" ]
"(quote) \<string contents\> (quote)" -> "(quote)"
"\<string contents\>" [ fillcolor="white" label="\<string contents\>" ]
"(quote) \<string contents\> (quote)" -> "\<string contents\>"
"(quote) \<string contents\> (quote)" -> "(quote)"
"(quote) \<string contents\> (quote)_attributes" [ fillcolor="goldenrod" label="{action =\> \[name,values\]}" shape="Mrecord" ]
"(quote) \<string contents\> (quote)" -> "(quote) \<string contents\> (quote)_attributes"
"\<string piece\>" [ fillcolor="white" label="\<string piece\>*" ]
"\<string contents\>" -> "\<string piece\>"
"\<string piece\>_attributes" [ fillcolor="goldenrod" label="{action =\> \[values\]}" shape="Mrecord" ]
"\<string piece\>" -> "\<string piece\>_attributes"
"\<easy string\>" [ fillcolor="white" label="\<easy string\>" ]
"\<string piece\>" -> "\<easy string\>"
"\<escaped char\>" [ fillcolor="white" label="\<escaped char\>" ]
"\<string piece\>" -> "\<escaped char\>"
"\<hex char\>" [ fillcolor="white" label="\<hex char\>" ]
"\<string piece\>" -> "\<hex char\>"
"('\\') \<any char\>" [ fillcolor="white" label="('\\') \<any char\>" ]
"\<escaped char\>" -> "('\\') \<any char\>"
"('\\')" [ fillcolor="white" label="('\\')" ]
"('\\') \<any char\>" -> "('\\')"
"\<any char\>" [ fillcolor="white" label="\<any char\>" ]
"('\\') \<any char\>" -> "\<any char\>"
"[ꞌꞌ]" [ fillcolor="white" label="\[ꞌꞌ\]" ]
"quote"
"quote" -> "[ꞌꞌ]"
"[^ꞌꞌ\\\\]" [ fillcolor="white" label="\[^ꞌꞌ\\\\]*" ]
"\<easy string\>" -> "[^ꞌꞌ\\\\]"
"'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" [ fillcolor="white" label="'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" ]
"\<hex char\>" -> "'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>"
"'\\'" [ fillcolor="white" label="'\\'" ]
"'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "'\\'"
"'u'" [ fillcolor="white" label="'u'" ]
"'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "'u'"
"\<hex digit\>" [ fillcolor="white" label="\<hex digit\>" ]
"'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
"'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
"'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
"'\\' 'u' \<hex digit\> \<hex digit\> \<hex digit\> \<hex digit\>" -> "\<hex digit\>"
"[0-9A-Fa-f]" [ fillcolor="white" label="\[0-9A-Fa-f\]" ]
"\<hex digit\>" -> "[0-9A-Fa-f]"
"[\\d\\D]" [ fillcolor="white" label="\[\\d\\D\]" ]
"\<any char\>" -> "[\\d\\D]"
"','" [ fillcolor="white" label="','" ]
"comma"
"comma" -> "','"
"[\\s]" [ fillcolor="white" label="\[\\s\]+" ]
"whitespace" -> "[\\s]"

subgraph 
{
graph [ label="json.3.bnf" rankdir="TB" ]
node [ shape="rectangle" style="filled" ]
edge [ color="grey" ]
rank="max" 
"Legend" [ label=<<table bgcolor = 'white'>
<tr>
	<td bgcolor = 'lightgreen'>The green node is the start node</td>
</tr>
<tr>
	<td bgcolor = 'lightblue'>Lightblue nodes are for lexeme attributes</td>
</tr>
<tr>
	<td bgcolor = 'orchid'>Orchid nodes are for lexemes</td>
</tr>
<tr>
	<td bgcolor = 'goldenrod'>Golden nodes are for actions</td>
</tr>
<tr>
	<td bgcolor = 'firebrick1'>Red nodes are for events</td>
</tr>
</table>> shape="plaintext" ]
}
}
Wrote html/json.3.svg. Size: 67574 bytes
