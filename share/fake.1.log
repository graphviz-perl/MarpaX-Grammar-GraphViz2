Default global: directed => digraph
Default global: driver => /usr/local/bin/dot
Default global: format => svg
Default global: label => ->
Default global: name => Perl
Default global: record_shape => Mrecord
Default global: strict => 0
Default global: subgraph => HASH(0x1cfe000)
Default global: timeout => 10
Default graph: label => fake.1.bnf, rankdir => TB
Default node: shape => rectangle, style => filled
Default edge: color => grey
statements. Attributes: {}
   |---꞉start. Attributes: {bracketed_name => "0", quantifier => "", real_name => ":start"}
   |   |---::=. Attributes: {bracketed_name => "0", quantifier => "", real_name => "::="}
   |   |---json. Attributes: {bracketed_name => "0", quantifier => "", real_name => "json"}
   |---json. Attributes: {bracketed_name => "0", quantifier => "", real_name => "json"}
   |   |---::=. Attributes: {bracketed_name => "0", quantifier => "", real_name => "::="}
   |   |---object. Attributes: {bracketed_name => "0", quantifier => "", real_name => "object"}
   |   |---|. Attributes: {bracketed_name => "0", quantifier => "", real_name => "|"}
   |   |---array. Attributes: {bracketed_name => "0", quantifier => "", real_name => "array"}
   |---object. Attributes: {bracketed_name => "0", quantifier => "", real_name => "object"}
   |   |---::=. Attributes: {bracketed_name => "0", quantifier => "", real_name => "::="}
   |   |---'{'. Attributes: {bracketed_name => "0", quantifier => "", real_name => "'{'"}
   |   |---'}'. Attributes: {bracketed_name => "0", quantifier => "", real_name => "'}'"}
   |   |---action. Attributes: {bracketed_name => "0", quantifier => "", real_name => "action"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---do_empty_object. Attributes: {bracketed_name => "0", quantifier => "", real_name => "do_empty_object"}
   |   |---|. Attributes: {bracketed_name => "0", quantifier => "", real_name => "|"}
   |   |---'{'. Attributes: {bracketed_name => "0", quantifier => "", real_name => "'{'"}
   |   |---members. Attributes: {bracketed_name => "0", quantifier => "", real_name => "members"}
   |   |---'}'. Attributes: {bracketed_name => "0", quantifier => "", real_name => "'}'"}
   |   |---action. Attributes: {bracketed_name => "0", quantifier => "", real_name => "action"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---do_object. Attributes: {bracketed_name => "0", quantifier => "", real_name => "do_object"}
   |---members. Attributes: {bracketed_name => "0", quantifier => "", real_name => "members"}
   |   |---::=. Attributes: {bracketed_name => "0", quantifier => "", real_name => "::="}
   |   |---value. Attributes: {bracketed_name => "0", quantifier => "+", real_name => "value"}
   |   |---separator. Attributes: {bracketed_name => "0", quantifier => "", real_name => "separator"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---comma1. Attributes: {bracketed_name => "1", quantifier => "", real_name => "<comma1>"}
   |   |---action. Attributes: {bracketed_name => "0", quantifier => "", real_name => "action"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---do_list. Attributes: {bracketed_name => "0", quantifier => "", real_name => "do_list"}
   |---value. Attributes: {bracketed_name => "0", quantifier => "", real_name => "value"}
   |   |---::=. Attributes: {bracketed_name => "0", quantifier => "", real_name => "::="}
   |   |---int. Attributes: {bracketed_name => "0", quantifier => "", real_name => "int"}
   |   |---separator. Attributes: {bracketed_name => "0", quantifier => "", real_name => "separator"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---comma2. Attributes: {bracketed_name => "1", quantifier => "", real_name => "<comma2>"}
   |   |---action. Attributes: {bracketed_name => "0", quantifier => "", real_name => "action"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---do_int_list. Attributes: {bracketed_name => "0", quantifier => "", real_name => "do_int_list"}
   |   |---|. Attributes: {bracketed_name => "0", quantifier => "", real_name => "|"}
   |   |---object. Attributes: {bracketed_name => "0", quantifier => "", real_name => "object"}
   |   |---|. Attributes: {bracketed_name => "0", quantifier => "", real_name => "|"}
   |   |---number. Attributes: {bracketed_name => "0", quantifier => "", real_name => "number"}
   |   |---|. Attributes: {bracketed_name => "0", quantifier => "", real_name => "|"}
   |   |---array. Attributes: {bracketed_name => "0", quantifier => "", real_name => "array"}
   |---array. Attributes: {bracketed_name => "0", quantifier => "", real_name => "array"}
   |   |---::=. Attributes: {bracketed_name => "0", quantifier => "", real_name => "::="}
   |   |---'['. Attributes: {bracketed_name => "0", quantifier => "", real_name => "'['"}
   |   |---']'. Attributes: {bracketed_name => "0", quantifier => "", real_name => "']'"}
   |   |---action. Attributes: {bracketed_name => "0", quantifier => "", real_name => "action"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---do_empty_array. Attributes: {bracketed_name => "0", quantifier => "", real_name => "do_empty_array"}
   |   |---|. Attributes: {bracketed_name => "0", quantifier => "", real_name => "|"}
   |   |---'['. Attributes: {bracketed_name => "0", quantifier => "", real_name => "'['"}
   |   |---elements. Attributes: {bracketed_name => "0", quantifier => "", real_name => "elements"}
   |   |---']'. Attributes: {bracketed_name => "0", quantifier => "", real_name => "']'"}
   |   |---action. Attributes: {bracketed_name => "0", quantifier => "", real_name => "action"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---do_array. Attributes: {bracketed_name => "0", quantifier => "", real_name => "do_array"}
   |---elements. Attributes: {bracketed_name => "0", quantifier => "", real_name => "elements"}
   |   |---::=. Attributes: {bracketed_name => "0", quantifier => "", real_name => "::="}
   |   |---value. Attributes: {bracketed_name => "0", quantifier => "+", real_name => "value"}
   |---number. Attributes: {bracketed_name => "0", quantifier => "", real_name => "number"}
   |   |---~. Attributes: {bracketed_name => "0", quantifier => "", real_name => "~"}
   |   |---int. Attributes: {bracketed_name => "0", quantifier => "", real_name => "int"}
   |---int. Attributes: {bracketed_name => "0", quantifier => "", real_name => "int"}
   |   |---~. Attributes: {bracketed_name => "0", quantifier => "", real_name => "~"}
   |   |---digits. Attributes: {bracketed_name => "0", quantifier => "", real_name => "digits"}
   |---digits. Attributes: {bracketed_name => "0", quantifier => "", real_name => "digits"}
   |   |---~. Attributes: {bracketed_name => "0", quantifier => "", real_name => "~"}
   |   |---[\\d]. Attributes: {bracketed_name => "0", quantifier => "+", real_name => "[\d]"}
   |---comma1. Attributes: {bracketed_name => "0", quantifier => "", real_name => "comma1"}
   |   |---~. Attributes: {bracketed_name => "0", quantifier => "", real_name => "~"}
   |   |---','. Attributes: {bracketed_name => "0", quantifier => "", real_name => "','"}
   |---comma2. Attributes: {bracketed_name => "0", quantifier => "", real_name => "comma2"}
   |   |---~. Attributes: {bracketed_name => "0", quantifier => "", real_name => "~"}
   |   |---','. Attributes: {bracketed_name => "0", quantifier => "", real_name => "','"}
   |---꞉discard. Attributes: {bracketed_name => "0", quantifier => "", real_name => ":discard"}
   |   |---=>. Attributes: {bracketed_name => "0", quantifier => "", real_name => "=>"}
   |   |---whitespace. Attributes: {bracketed_name => "0", quantifier => "", real_name => "whitespace"}
   |---whitespace. Attributes: {bracketed_name => "0", quantifier => "", real_name => "whitespace"}
       |---~. Attributes: {bracketed_name => "0", quantifier => "", real_name => "~"}
       |---[\\s]. Attributes: {bracketed_name => "0", quantifier => "+", real_name => "[\s]"}
Added node: "json" [ fillcolor="lightgreen" label="{:start|json}" shape="Mrecord" ]
Added node: "꞉discard" [ fillcolor="lightblue" label="꞉discard" ]
Added edge: "json" -> "꞉discard" [ label="" ]
Added node: "whitespace" [ fillcolor="lightblue" label="whitespace" ]
Added edge: "꞉discard" -> "whitespace" [ label="" ]
--------------------------------------------------
Node:           json
Daughter count: 1 ::=
Daughter stack: 2
	object
	array
Adverb stack:   2
	
	
--------------------------------------------------
Added edge: "json" -> "json" [ label="" ]
Added node: "object" [ fillcolor="white" label="object" ]
Added edge: "json" -> "object" [ label="" ]
Added edge: "json" -> "json" [ label="" ]
Added node: "array" [ fillcolor="white" label="array" ]
Added edge: "json" -> "array" [ label="" ]
--------------------------------------------------
Node:           object
Daughter count: 1 ::=
Daughter stack: 2
	'{', '}'
	'{', members, '}'
Adverb stack:   2
	{action =\> do_empty_object}
	{action =\> do_object}
--------------------------------------------------
Added edge: "json" -> "object" [ label="" ]
Added node: "'{' '}'" [ fillcolor="white" label="'{' '}'" ]
Added edge: "object" -> "'{' '}'" [ label="" ]
Added edge: "json" -> "object" [ label="" ]
Added node: "'{' members '}'" [ fillcolor="white" label="'{' members '}'" ]
Added edge: "object" -> "'{' members '}'" [ label="" ]
--------------------------------------------------
Node:           members
Daughter count: 1 ::=
Daughter stack: 1
	value
Adverb stack:   1
	{action =\> do_list, separator =\> comma1}
--------------------------------------------------
Added node: "members" [ fillcolor="white" label="members" ]
Added edge: "json" -> "members" [ label="" ]
Added node: "value" [ fillcolor="white" label="value" ]
Added edge: "members" -> "value" [ label="" ]
--------------------------------------------------
Node:           value
Daughter count: 1 ::=
Daughter stack: 4
	int
	object
	number
	array
Adverb stack:   4
	{action =\> do_int_list, separator =\> comma2}
	
	
	
--------------------------------------------------
Added edge: "json" -> "value" [ label="" ]
Added node: "int" [ fillcolor="white" label="int" ]
Added edge: "value" -> "int" [ label="" ]
Added edge: "json" -> "value" [ label="" ]
Added edge: "value" -> "object" [ label="" ]
Added edge: "json" -> "value" [ label="" ]
Added node: "number" [ fillcolor="white" label="number" ]
Added edge: "value" -> "number" [ label="" ]
Added edge: "json" -> "value" [ label="" ]
Added edge: "value" -> "array" [ label="" ]
--------------------------------------------------
Node:           array
Daughter count: 1 ::=
Daughter stack: 2
	'[', ']'
	'[', elements, ']'
Adverb stack:   2
	{action =\> do_empty_array}
	{action =\> do_array}
--------------------------------------------------
Added edge: "json" -> "array" [ label="" ]
Added node: "'[' ']'" [ fillcolor="white" label="'\[' '\]'" ]
Added edge: "array" -> "'[' ']'" [ label="" ]
Added edge: "json" -> "array" [ label="" ]
Added node: "'[' elements ']'" [ fillcolor="white" label="'\[' elements '\]'" ]
Added edge: "array" -> "'[' elements ']'" [ label="" ]
--------------------------------------------------
Node:           elements
Daughter count: 1 ::=
Daughter stack: 1
	value
Adverb stack:   1
	
--------------------------------------------------
Added node: "elements" [ fillcolor="white" label="elements" ]
Added edge: "json" -> "elements" [ label="" ]
Added edge: "elements" -> "value" [ label="" ]
--------------------------------------------------
Node:           number
Daughter count: 1 ~
Daughter stack: 1
	int
Adverb stack:   1
	
--------------------------------------------------
Added edge: "json" -> "number" [ label="" ]
Added edge: "number" -> "int" [ label="" ]
--------------------------------------------------
Node:           int
Daughter count: 1 ~
Daughter stack: 1
	digits
Adverb stack:   1
	
--------------------------------------------------
Added edge: "json" -> "int" [ label="" ]
Added node: "digits" [ fillcolor="white" label="digits" ]
Added edge: "int" -> "digits" [ label="" ]
--------------------------------------------------
Node:           digits
Daughter count: 1 ~
Daughter stack: 1
	[\\d]
Adverb stack:   1
	
--------------------------------------------------
Added edge: "json" -> "digits" [ label="" ]
Added node: "[\\d]" [ fillcolor="white" label="\[\\d\]" ]
Added edge: "digits" -> "[\\d]" [ label="" ]
--------------------------------------------------
Node:           comma1
Daughter count: 1 ~
Daughter stack: 1
	','
Adverb stack:   1
	
--------------------------------------------------
Added node: "comma1" [ fillcolor="white" label="comma1" ]
Added edge: "json" -> "comma1" [ label="" ]
Added node: "','" [ fillcolor="white" label="','" ]
Added edge: "comma1" -> "','" [ label="" ]
--------------------------------------------------
Node:           comma2
Daughter count: 1 ~
Daughter stack: 1
	','
Adverb stack:   1
	
--------------------------------------------------
Added node: "comma2" [ fillcolor="white" label="comma2" ]
Added edge: "json" -> "comma2" [ label="" ]
Added edge: "comma2" -> "','" [ label="" ]
--------------------------------------------------
Node:           whitespace
Daughter count: 1 ~
Daughter stack: 1
	[\\s]
Adverb stack:   1
	
--------------------------------------------------
Added edge: "json" -> "whitespace" [ label="" ]
Added node: "[\\s]" [ fillcolor="white" label="\[\\s\]" ]
Added edge: "whitespace" -> "[\\s]" [ label="" ]
Driver: /usr/local/bin/dot. Output file: html/fake.1.svg. Format: svg. Timeout: 10 second(s)

digraph Perl
{
graph [ label="fake.1.bnf" rankdir="TB" ]
node [ shape="rectangle" style="filled" ]
edge [ color="grey" ]
"json" [ fillcolor="lightgreen" label="{:start|json}" shape="Mrecord" ]
"꞉discard" [ fillcolor="lightblue" label="꞉discard" ]
"json" -> "꞉discard" [ label="" ]
"whitespace" [ fillcolor="lightblue" label="whitespace" ]
"꞉discard" -> "whitespace" [ label="" ]
"json" -> "json" [ label="" ]
"object" [ fillcolor="white" label="object" ]
"json" -> "object" [ label="" ]
"json" -> "json" [ label="" ]
"array" [ fillcolor="white" label="array" ]
"json" -> "array" [ label="" ]
"json" -> "object" [ label="" ]
"'{' '}'" [ fillcolor="white" label="'{' '}'" ]
"object" -> "'{' '}'" [ label="" ]
"json" -> "object" [ label="" ]
"'{' members '}'" [ fillcolor="white" label="'{' members '}'" ]
"object" -> "'{' members '}'" [ label="" ]
"members" [ fillcolor="white" label="members" ]
"json" -> "members" [ label="" ]
"value" [ fillcolor="white" label="value" ]
"members" -> "value" [ label="" ]
"json" -> "value" [ label="" ]
"int" [ fillcolor="white" label="int" ]
"value" -> "int" [ label="" ]
"json" -> "value" [ label="" ]
"value" -> "object" [ label="" ]
"json" -> "value" [ label="" ]
"number" [ fillcolor="white" label="number" ]
"value" -> "number" [ label="" ]
"json" -> "value" [ label="" ]
"value" -> "array" [ label="" ]
"json" -> "array" [ label="" ]
"'[' ']'" [ fillcolor="white" label="'\[' '\]'" ]
"array" -> "'[' ']'" [ label="" ]
"json" -> "array" [ label="" ]
"'[' elements ']'" [ fillcolor="white" label="'\[' elements '\]'" ]
"array" -> "'[' elements ']'" [ label="" ]
"elements" [ fillcolor="white" label="elements" ]
"json" -> "elements" [ label="" ]
"elements" -> "value" [ label="" ]
"json" -> "number" [ label="" ]
"number" -> "int" [ label="" ]
"json" -> "int" [ label="" ]
"digits" [ fillcolor="white" label="digits" ]
"int" -> "digits" [ label="" ]
"json" -> "digits" [ label="" ]
"[\\d]" [ fillcolor="white" label="\[\\d\]" ]
"digits" -> "[\\d]" [ label="" ]
"comma1" [ fillcolor="white" label="comma1" ]
"json" -> "comma1" [ label="" ]
"','" [ fillcolor="white" label="','" ]
"comma1" -> "','" [ label="" ]
"comma2" [ fillcolor="white" label="comma2" ]
"json" -> "comma2" [ label="" ]
"comma2" -> "','" [ label="" ]
"json" -> "whitespace" [ label="" ]
"[\\s]" [ fillcolor="white" label="\[\\s\]" ]
"whitespace" -> "[\\s]" [ label="" ]
}
Wrote html/fake.1.svg. Size: 19665 bytes
